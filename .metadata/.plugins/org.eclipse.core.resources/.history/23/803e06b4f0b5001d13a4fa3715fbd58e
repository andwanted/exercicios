package entities;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import entities.enums.Turno;

public class Turma {

	private String nome;
	private Integer codigo;
	private Turno turno;
	private Curso curso;
	private List<Turma> turmas = new ArrayList<>();
	private List<Aluno> alunos = new ArrayList<>();
	private List<Professor> professores = new ArrayList<>();

	public Turma() {

	}

	public Turma(String nome, Integer codigo, Turno turno, Curso curso) {
		this.nome = nome;
		this.codigo = codigo;
		this.turno = turno;
		this.curso = curso;
	}

	public Turma(String nome, Integer codigo, Turno turno, Curso curso, List<Turma> turmas,
			List<Professor> professores) {
		super();
		this.nome = nome;
		this.codigo = codigo;
		this.turno = turno;
		this.curso = curso;
		this.turmas = turmas;
		this.professores = professores;
	}

	public Turma(String nome, Integer codigo, Turno turno, Curso curso, List<Turma> turmas, List<Aluno> alunos,
			List<Professor> professores) {
		super();
		this.nome = nome;
		this.codigo = codigo;
		this.turno = turno;
		this.curso = curso;
		this.turmas = turmas;
		this.alunos = alunos;
		this.professores = professores;
	}

	public Curso getCurso() {
		return curso;
	}

	public void setCurso(Curso curso) {
		this.curso = curso;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public Integer getCodigo() {
		return codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	public Turno getTurno() {
		return turno;
	}

	public void setTurno(Turno turno) {
		this.turno = turno;
	}

	public List<Aluno> getAlunos() {
		return alunos;
	}

	public void addAluno(Aluno aluno) {
		alunos.add(aluno);
	}

	public List<Professor> getProfessores() {
		return professores;
	}

	public void addProfessor(Professor professor) {
		professores.add(professor);
	}

	public void apresentaProfessores() {
		System.out.println("Lista de professores:");
		for (Professor prof : professores) {
			System.out.print(prof.getNome() + "\n");
		}
	}

	public void registraProfessor() {
		Scanner scTurma = new Scanner(System.in);
		System.out.print("Cadastrar professor na turma");
		System.out.print("Digite o nome do professor: ");
		String nomeProf = scTurma.next();
		for (Professor prof : professores) {
			if (nomeProf.equals(prof.getNome())) {
				System.out.print(nomeProf + " adicionado a turma");
				Turma turma = new Turma(nome, codigo, turno, curso, turmas, professores);
				System.out.println(toString());
			} else {
				System.out.print(nomeProf);
				System.out.print(prof.getNome());
				System.out.print("\n Nao encontrado");
			}
		}

		scTurma.close();
	}

	public void matricularAluno() {
		Scanner scTurma1 = new Scanner(System.in);
		System.out.println("Matricular na turma");
		System.out.print("Digite o nome do professor: ");
		String nomeAluno = scTurma1.next();
		for (Aluno aluno : alunos) {
			if (nomeAluno.equals(aluno.getNome())) {
				System.out.print(nomeAluno + " adicionado a turma");
				Turma turma = new Turma(nome, codigo, turno, curso, turmas, professores,alunos);
				System.out.println(toString());
			} else {
				System.out.print(nomeAluno);
				System.out.print(aluno.getNome());
				System.out.print("\n Nao encontrado");
			}
		}

		scTurma1.close();
	}

	public void abrirTurma() {
		setNome(nome);
		setCodigo(codigo);
		setCurso(curso);
		setTurno(turno);
		System.out.println("Turma aberta: " + toString());
	}

	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("Turma " + getNome());
		sb.append("\nCodigo: " + getCodigo());
		sb.append("\nTurno: " + getTurno());
		sb.append("\nCurso: " + getCurso());
		for (Professor prof : professores) {
			System.out.println(prof.getNome() + " " + prof.getregistro());
		}
		for (Aluno aluno : alunos) {
			System.out.println(aluno.getNome() + " " + aluno.getCpf());
		}
		return sb.toString();
	}

}
