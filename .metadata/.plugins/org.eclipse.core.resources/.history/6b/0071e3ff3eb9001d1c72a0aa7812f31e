package application;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

import entities.Aluno;
import entities.Curso;
import entities.Professor;
import entities.Turma;
import entities.enums.Turno;

public class Program {

	public static void main(String[] args) {

		// TODO Auto-generated method stub
		Locale.setDefault(Locale.US);
		Scanner sc = new Scanner(System.in);
		System.out.println("Cadastrar curso");
		System.out.print("Digite o nome do curso: ");
		String nomeCurso = sc.nextLine();
		System.out.print("Digite o codigo do curso: ");
		int codCurso = sc.nextInt();
		Curso curso = new Curso(nomeCurso, codCurso);
		System.out.println("Curso cadastrado: ");
		System.out.print(curso.toString());
		System.out.println("\n--------------------------");

		System.out.println("Abrir turma ");
		sc.nextLine();
		System.out.print("Nome da turma: ");
		String nomeTurma = sc.nextLine();
		System.out.print("Codigo da turma: ");
		int codTurma = sc.nextInt();
		System.out.print("Turno: ");
		Turno turno = Turno.valueOf(sc.next());
		Turma turma = new Turma(nomeTurma, codTurma, turno, curso);
		System.out.println("\n--------------------------");
		System.out.println("Turma aberta");
		System.out.print(turma.toString());
		System.out.println("\n--------------------------");

		System.out.println("Cadastrar professor: ");
		System.out.print("Quantos professores serão cadastrados?");
		int nProf = sc.nextInt();
		for (int i = 1; i <= nProf; i++) {
			System.out.print("Nome do professor: ");
			String nomeProf = sc.next();
			System.out.print("Registro do professor: ");
			int regProf = sc.nextInt();
			Professor professor = new Professor(nomeProf, regProf);
			turma.addProfessor(professor);
		}

		System.out.println("\n--------------------------");
		System.out.println("Cadastrar alunos: ");
		System.out.print("Quantos alunos serão cadastrados?");
		int nAlunos = sc.nextInt();
		for (int i = 1; i <= nAlunos; i++) {
			System.out.print("Nome do aluno: ");
			String nomeAluno = sc.next();
			System.out.print("Idade do aluno: ");
			int idadeAluno = sc.nextInt();
			System.out.print("Cpf do aluno: ");
			long cpfAluno = sc.nextLong();
			Aluno aluno = new Aluno(nomeAluno, idadeAluno, cpfAluno);
			turma.addAluno(aluno);
		}

		System.out.println("\n--------------------------");
		System.out.println("Quantos professores serão cadastrados na turma?");
		int contarProfReg = sc.nextInt();

		int i = 0;

		while (i <= contarProfReg) {
			System.out.print("Digite o nome professor: ");
			String nomeProfRegistro = sc.next();
			for (Professor professor : turma.getProfessores()) {
				if (nomeProfRegistro.equals(professor.getNome())) {
					turma.addProfessoresCadastrados(professor);
					System.out.println(professor.getNome() + " Registrado na turma.");
					i++;
					break;
				}
				System.out.println("Não encontramos este nome, digite novamente: ");
			}
		}

//		for (int i = 1; i <= contarProfReg;) {
//
//		}

		int c = 0;
		System.out.println("Quantos alunos serão matriculados? ");
		int contarAlunoMat = sc.nextInt();
		c = 0;
		for (int y = 1; y <= contarAlunoMat; y++) {
			System.out.print("Digite o nome do aluno: ");
			String nomeAlunoMatricula = sc.next();
			if (turma.getAlunos().get(c).getNome().contains(nomeAlunoMatricula)) {
				for (Aluno aluno : turma.getAlunos()) {
					if (nomeAlunoMatricula.equals(aluno.getNome())) {
						turma.addAlunosCadastrados(aluno);
						System.out.println(aluno.getNome() + " Cadastrado na turma.");
					}
				}
			} else
				System.out.println("Aluno não encontrado");
			c++;
		}

		System.out.println(turma.toString());

		sc.close();

	}

}
